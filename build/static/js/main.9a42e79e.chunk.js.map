{"version":3,"sources":["components/modul-3-session-2/module-3-handson-2.jsx","components/modul-3-session-2/search/SearchBar.jsx","components/Trending.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["ReturnResult","useState","text","setText","data","setData","load","setLoad","handleClick","a","axios","get","process","response","console","log","mapData","map","gif","index","src","images","preview_gif","url","className","type","value","onChange","event","target","onClick","alt","SearchBar","handleChange","Trending","GiFViewer","to","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9a42e79e.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport './result.css';\n\nexport default function ReturnResult() {\n    const [text, setText] = useState('');\n    const [data, setData] = useState(\"\");\n    const [load, setLoad] = useState(false);\n\n    const key =  process.env.REACT_APP_GIPHY_KEY;\n\n    const handleChange = (event) => {\n        setText(event.target.value);\n    };\n\n    const handleClick = async () => {\n        setLoad(true);\n        try {\n            const response = await axios.get(\n                `https://api.giphy.com/v1/gifs/search?api_key=${key}&q=${text}&limit=12`\n            );\n            console.log(response);\n            const mapData = response.data.data;\n            setData(\n                mapData.map((gif, index) => {\n                    return (\n                        <img key={index} src={gif.images.preview_gif.url} />\n                    )\n                })\n            ) \n            setLoad(false);\n        } catch (e) {\n            console.log(e);\n        }\n    };\n\n    return(\n        <div className=\"result\">\n            <input type=\"text\" value={text} onChange={handleChange} />\n            <button onClick={handleClick}>cari</button>\n            <div className=\"data\">\n                <img src={load} alt=\"\" />\n                {data}\n            </div>\n            \n        </div> \n    )\n}","import React from 'react';\n\nexport default function SearchBar({data, load, text, handleChange, handleClick}) {\n    console.log(\"succes import\")\n    return (\n        <form>\n            <input type=\"text\" value={text} onChange={handleChange} />\n            <button onClick={handleClick}>search</button>\n            <div className=\"data\">\n                <img src={load} alt=\"\" />\n                {data}\n            </div>\n        </form>\n\n    )\n}","import React, { useState } from 'react';\nimport axios from 'axios';\n\n\nexport default function Trending() {\n    const [text, setText] = useState('');\n    const [data, setData] = useState(\"\");\n    const [load, setLoad] = useState(false);\n\n    const key =  process.env.REACT_APP_GIPHY_KEY;\n\n    const handleChange = (event) => {\n        setText(event.target.value);\n    };\n\n    const handleClick = async () => {\n        setLoad(true);\n        try {\n            const response = await axios.get(\n                `https://api.giphy.com/v1/gifs/trending`\n            );\n            console.log(response);\n            const mapData = response.data.data;\n            setData(\n                mapData.map((gif, index) => {\n                    return (\n                        <img key={index} src={gif.images.preview_gif.url} />\n                    )\n                })\n            ) \n            setLoad(false);\n        } catch (e) {\n            console.log(e);\n        }\n    };\n\n    return(\n        <div className=\"result\">\n            <input type=\"text\" value={text} onChange={handleChange} />\n            <button onClick={handleClick}>cari</button>\n            <div className=\"data\">\n                <img src={load} alt=\"\" />\n                {data}\n            </div>\n            \n        </div> \n    )\n}","import React from 'react';\nimport ReturnResult from './components/modul-3-session-2/module-3-handson-2';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\nimport SearchBar from './components/modul-3-session-2/search/SearchBar';\nimport Trending from './components/Trending';\n\n\n// export default function GiFViewer() {\n//   return (\n//     <div>\n//       <ReturnResult />\n//     </div>\n//   )\n// }\n\nexport default function GiFViewer() {\n  return (\n    <Router>\n      <div>\n        <ul>\n          <li>\n            <Link to=\"/\">Home</Link>\n          </li>\n          <li>\n            <Link to=\"/about\">Trending</Link>\n          </li>\n          <li>\n            <Link to=\"/topics\">SearchBar</Link>\n          </li>\n        </ul>\n        <Switch>\n          <Route path=\"/about\">\n            <Trending />\n          </Route>\n          <Route path=\"/topics\">\n            <SearchBar />\n          </Route>\n          <Route path=\"/\">\n            <ReturnResult />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}